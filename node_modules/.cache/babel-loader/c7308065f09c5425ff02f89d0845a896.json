{"ast":null,"code":"var _jsxFileName = \"R:\\\\UNI\\\\React\\\\create-react-app\\\\tictactoer\\\\src\\\\components\\\\Board.js\";\nimport Row from './Row';\nimport { Square } from './Square';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sliceArray(array, size) {\n  const res = [];\n\n  for (let i = 0; i < array.length; i += size) {\n    res.push(array.slice(i, i + size));\n  }\n\n  return res;\n}\n\nexport function Board({\n  board,\n  onplay,\n  disabled\n}) {\n  const squares = board.map((square, i) => /*#__PURE__*/_jsxDEV(Square, {\n    disabled: disabled,\n    value: square,\n    onClick: () => onplay(i)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 44\n  }, this));\n  const rows = sliceArray(squares, 3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(Row, {\n      children: row\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\nBoard.proptype = {\n  board: PropTypes.array,\n  onplay: PropTypes.func\n};\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["R:/UNI/React/create-react-app/tictactoer/src/components/Board.js"],"names":["Row","Square","PropTypes","sliceArray","array","size","res","i","length","push","slice","Board","board","onplay","disabled","squares","map","square","rows","row","proptype","func"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAgC;AAC5B,QAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,KAAK,CAACI,MAAtB,EAA8BD,CAAC,IAAEF,IAAjC,EAAuC;AACrCC,IAAAA,GAAG,CAACG,IAAJ,CAASL,KAAK,CAACM,KAAN,CAAYH,CAAZ,EAAeA,CAAC,GAACF,IAAjB,CAAT;AACD;;AACD,SAAOC,GAAP;AACD;;AACH,OAAO,SAASK,KAAT,CAAe;AAACC,EAAAA,KAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAf,EACP;AACI,QAAMC,OAAO,GAAEH,KAAK,CAACI,GAAN,CAAU,CAACC,MAAD,EAAQV,CAAR,kBAAc,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEO,QAAlB;AAAoC,IAAA,KAAK,EAAEG,MAA3C;AAAmD,IAAA,OAAO,EAAE,MAAMJ,MAAM,CAACN,CAAD;AAAxE,KAAiCA,CAAjC;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAf;AACA,QAAMW,IAAI,GAAEf,UAAU,CAACY,OAAD,EAAU,CAAV,CAAtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKG,IAAI,CAACF,GAAL,CAAS,CAACG,GAAD,EAAKZ,CAAL,kBAAU,QAAC,GAAD;AAAA,gBAAcY;AAAd,OAAUZ,CAAV;AAAA;AAAA;AAAA;AAAA,YAAnB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAVeI,K;AAYhBA,KAAK,CAACS,QAAN,GAAe;AACXR,EAAAA,KAAK,EAAEV,SAAS,CAACE,KADN;AAEXS,EAAAA,MAAM,EAAEX,SAAS,CAACmB;AAFP,CAAf;AAIA,eAAeV,KAAf","sourcesContent":["import Row from './Row';\r\nimport { Square } from './Square';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction sliceArray(array, size){\r\n    const res = [];\r\n    for (let i=0; i<array.length; i+=size) {\r\n      res.push(array.slice(i, i+size));\r\n    }\r\n    return res;\r\n  }\r\nexport function Board({board , onplay, disabled})\r\n{\r\n    const squares= board.map((square,i) => <Square disabled={disabled} key={i} value={square} onClick={() => onplay(i)} />);\r\n    const rows= sliceArray(squares, 3)\r\n    return(\r\n        <div className=\"Board\">\r\n            {rows.map((row,i)=> <Row key={i}>{row}</Row>)}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nBoard.proptype={\r\n    board: PropTypes.array,\r\n    onplay: PropTypes.func,\r\n}\r\nexport default Board; "]},"metadata":{},"sourceType":"module"}